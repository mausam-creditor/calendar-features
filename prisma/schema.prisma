// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id                String              @id @default(uuid())
  name              String
  email             String              @unique
  eventsCreated     Event[]             @relation("EventCreator")
  eventParticipants EventParticipant[]
  reminder Reminder[]
}

model Group {
  id     String   @id @default(uuid())
  name   String
  type   GroupType
  events Event[]
}

enum GroupType {
  COURSE
  TEAM
  COMMUNITY
}

model Event {
  id             String              @id @default(uuid())
  title          String
  description    String?
  startTime      DateTime
  endTime        DateTime
  location       String?
  isAllDay       Boolean             @default(false)
  isRecurring    Boolean             @default(false)
  calendarType   CalendarType
  visibility     Visibility          @default(PRIVATE)

  creatorId      String
  creator        User                @relation("EventCreator", fields: [creatorId], references: [id])

  groupId        String?             
  group          Group?              @relation(fields: [groupId], references: [id])

  recurrenceRule RecurrenceRule?
  participants   EventParticipant[]
  reminder Reminder[]
}

enum CalendarType {
  PERSONAL
  GROUP
  COURSE
}

enum Visibility {
  PRIVATE
  SHARED
  PUBLIC
}

model RecurrenceRule {
  id         String   @id @default(uuid())
  eventId    String   @unique
  frequency  Frequency
  interval   Int      @default(1)
  byDay      String?  // e.g., "2TU", "WEEK_BEFORE_LAST_TU"
  endDate    DateTime?
  count      Int?

  event      Event    @relation(fields: [eventId], references: [id])
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model EventParticipant {
  id       String       @id @default(uuid())
  eventId  String
  userId   String
  status   RSVPStatus   @default(INVITED)
  role     ParticipantRole @default(VIEWER)

  event    Event        @relation(fields: [eventId], references: [id])
  user     User         @relation(fields: [userId], references: [id])
}

enum RSVPStatus {
  INVITED
  ACCEPTED
  DECLINED
  MAYBE
}

enum ParticipantRole {
  HOST
  EDITOR
  VIEWER
}

model Reminder {
  id          String     @id @default(uuid())
  eventId     String
  userId      String?
  triggerTime DateTime
  method      ReminderMethod

  event       Event      @relation(fields: [eventId], references: [id])
  user        User?      @relation(fields: [userId], references: [id])
}

enum ReminderMethod {
  EMAIL
  PUSH
  SMS
}
